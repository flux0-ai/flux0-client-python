"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .emittedeventdto import EmittedEventDTO, EmittedEventDTOTypedDict
from openapi.types import BaseModel
from openapi.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal
from typing_extensions import Annotated, TypedDict


class EmittedEventStreamTypedDict(TypedDict):
    id: str
    r"""Unique identifier for the event"""
    data: EmittedEventDTOTypedDict
    event: Literal["status"]


class EmittedEventStream(BaseModel):
    id: str
    r"""Unique identifier for the event"""

    data: EmittedEventDTO

    EVENT: Annotated[
        Annotated[Literal["status"], AfterValidator(validate_const("status"))],
        pydantic.Field(alias="event"),
    ] = "status"
