"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Any, Literal
from typing_extensions import Annotated, TypedDict


class ToolPartDTOTypedDict(TypedDict):
    tool_call_id: str
    tool_name: str
    args: Any
    r"""Any valid JSON"""
    type: Literal["tool_call"]


class ToolPartDTO(BaseModel):
    tool_call_id: str

    tool_name: str

    args: Any
    r"""Any valid JSON"""

    TYPE: Annotated[
        Annotated[Literal["tool_call"], AfterValidator(validate_const("tool_call"))],
        pydantic.Field(alias="type"),
    ] = "tool_call"
