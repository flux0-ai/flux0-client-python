"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Any, Literal
from typing_extensions import Annotated, TypedDict


class ReasoningPartDTOTypedDict(TypedDict):
    reasoning: Any
    r"""Any valid JSON"""
    type: Literal["reasoning"]


class ReasoningPartDTO(BaseModel):
    reasoning: Any
    r"""Any valid JSON"""

    TYPE: Annotated[
        Annotated[Literal["reasoning"], AfterValidator(validate_const("reasoning"))],
        pydantic.Field(alias="type"),
    ] = "reasoning"
